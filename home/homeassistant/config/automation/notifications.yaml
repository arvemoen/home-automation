# Freezer high temperatue
- alias: "Freezer temperature too high"
  trigger:
    platform: numeric_state
    entity_id: sensor.fryser_temperature
    above: -18
  action:
    service: notify.mobile_app_arve_sin_iphone
    data_template:
      title: Temperatur i fryser er høy 
      message: "Temperaturen er nå {{ states('sensor.fryser_temperature') }} ºC"
# Freezer temperature back to normal"
- alias: "Freezer temperature OK"
  trigger:
    platform: numeric_state
    entity_id: sensor.fryser_temperature
    below: -18
  action:
    service: notify.mobile_app_arve_sin_iphone
    data_template:
      title: Temperatur i fryser er OK
      message: "Temperaturen er nå {{ states('sensor.fryser_temperature') }} ºC"      

# Toolshed low temperatue
- alias: "Toolshed temperature too low"
  trigger:
    platform: numeric_state
    entity_id: sensor.utebod_temperature
    below: 0
  action:
    service: notify.mobile_app_arve_sin_iphone
    data_template:
      title: Temperatur i utebod er lav 
      message: "Temperaturen er nå {{ states('sensor.utebod_temperature') }} ºC"
# Toolshed temperature back to normal"
- alias: "Toolshed temperature OK"
  trigger:
    platform: numeric_state
    entity_id: sensor.utebod_temperature
    above: 0
  action:
    service: notify.mobile_app_arve_sin_iphone
    data_template:
      title: Temperatur i utebod er OK    
      message: "Temperaturen er nå {{ states('sensor.utebod_temperature') }} ºC"      
      
# Low battery level detection & notification for all battery sensors
# Source: https://gist.github.com/sbyx/1f6f434f0903b872b84c4302637d0890
- alias: "Low battery level"
  variables:
    day: 0                   # Weekday to test on ( 0: Every day, 1: Monday ... 7: Sunday)
    threshold: 15            # Battery warning level threshold (%)
    exclude: {entity_id: []} # Excluded Sensors  
    sensors: >-
      {% set result = namespace(sensors=[]) %}
      {% for state in states.sensor | selectattr('attributes.device_class', '==', 'battery') %}
        {% if 0 <= state.state | int(-1) < threshold | int and not state.entity_id in exclude.entity_id %}
          {% set result.sensors = result.sensors + [state.name ~ ' (' ~ state.state ~ ' %)'] %}
        {% endif %}
      {% endfor %}
      {% for state in states.binary_sensor | selectattr('attributes.device_class', '==', 'battery') | selectattr('state', '==', 'on') %}
        {% if not state.entity_id in exclude.entity_id %}
          {% set result.sensors = result.sensors + [state.name] %}
        {% endif %}
      {% endfor %}
      {{result.sensors|join(', ')}}
  trigger:
  - platform: time
    at: '10:00:00'           # Time to test on
  condition:
  - '{{ sensors != '''' and (day | int == 0 or day | int == now().isoweekday()) }}'
  action:
    service: notify.mobile_app_arve_sin_iphone
    data_template:
      title: Batteri snart tomt    
      message: "{{ sensors }}"      
